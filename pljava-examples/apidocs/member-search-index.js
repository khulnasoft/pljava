memberSearchIndex = [{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"accumulateXY(double[], double, double)","url":"accumulateXY(double[],double,double)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"activate()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"add(ComplexScalar, ComplexScalar)","url":"add(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"add(ComplexScalar, double)","url":"add(org.postgresql.pljava.example.annotation.ComplexScalar,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addNumbers(short, int, long, BigDecimal, BigDecimal, float, double)","url":"addNumbers(short,int,long,java.math.BigDecimal,java.math.BigDecimal,float,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOne(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOne(Integer)","url":"addOne(java.lang.Integer)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOneLong(long)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"afterUsernameInsert(TriggerData)","url":"afterUsernameInsert(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"afterUsernameUpdate(TriggerData)","url":"afterUsernameUpdate(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"allowFragment(DOMResult)","url":"allowFragment(javax.xml.transform.dom.DOMResult)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface","l":"answer()"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"AnyTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"applyAdjustments(ResultSet, T)","url":"applyAdjustments(java.sql.ResultSet,T)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"assertHasValues(ComplexScalar, double, double)","url":"assertHasValues(org.postgresql.pljava.example.annotation.ComplexScalar,double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"assertHasValues(ComplexTuple, double, double)","url":"assertHasValues(org.postgresql.pljava.example.annotation.ComplexTuple,double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"assertHasValues(Point, double, double)","url":"assertHasValues(org.postgresql.pljava.example.annotation.Point,double,double)"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"assignRowValues(ResultSet, int)","url":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"assignRowValues(ResultSet, long)","url":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"assignRowValues(ResultSet, long)","url":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"assignRowValues(ResultSet, long)","url":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"assignRowValues(ResultSet, long)","url":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B","l":"B()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"BinaryColumnTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"boolOneOut(ResultSet)","url":"boolOneOut(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"bounceXMLParameter_(SQLXML)","url":"bounceXMLParameter_(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"bounceXMLParameter(SQLXML)","url":"bounceXMLParameter(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B.C","l":"C()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"callMetaDataMethod(String)","url":"callMetaDataMethod(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"castTextXML(SQLXML)","url":"castTextXML(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"close()"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"close()"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"close()"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"close()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"close()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"close()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"close()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"cmpMagnitude(ComplexScalar, ComplexScalar)","url":"cmpMagnitude(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"PGF1010962","l":"complexParam(ResultSet[])","url":"complexParam(java.sql.ResultSet[])"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"ComplexScalar()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"ComplexScalar(double, double, String)","url":"%3Cinit%3E(double,double,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"ComplexTuple()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"componentsEQ(ComplexScalar, ComplexScalar)","url":"componentsEQ(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"ConditionalDDR","l":"ConditionalDDR()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"count(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"countNulls(Integer[])","url":"countNulls(java.lang.Integer[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"countNulls(ResultSet)","url":"countNulls(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"createIterator(int)"},{"p":"org.postgresql.pljava.example","c":"Security","l":"createTempFile()"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"disallow44(TriggerData)","url":"disallow44(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"echoXMLParameter_(SQLXML, int, int)","url":"echoXMLParameter_(java.sql.SQLXML,int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"echoXMLParameter(SQLXML, int, int)","url":"echoXMLParameter(java.sql.SQLXML,int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"ensureClosed(Result, SQLXML, int)","url":"ensureClosed(javax.xml.transform.Result,java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"Enumeration()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"eqToReal(ComplexScalar, double)","url":"eqToReal(org.postgresql.pljava.example.annotation.ComplexScalar,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"examineRows(TriggerData)","url":"examineRows(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"executeSelect(int)"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"executeSelect(String)","url":"executeSelect(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"executeSelect(String)","url":"executeSelect(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishAvgX(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishAvgY(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishIntercept(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishRegr(double[], ResultSet)","url":"finishRegr(double[],java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishSlope(double[])"},{"p":"org.postgresql.pljava.example","c":"Threads","l":"forceDeadlock()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"free()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"free()"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"getBinaryPairs()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getCharacterStream()"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"getDatabaseMetaDataBooleans()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"getDatabaseMetaDataInts()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"getDatabaseMetaDataStrings()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getDate()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"getDateAsString()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsScalarSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingPropertiesAsScalarSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"getResultSet()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"getResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"getResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"getResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getSource(Class<T>)","url":"getSource(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getSource(Class<T>)","url":"getSource(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getString()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getTime()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"getTimeAsString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getTimestamp()"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"hasNext()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOneOut()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOneOutTable()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOutParams(ResultSet)","url":"helloOutParams(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloTable()"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"HugeResultSet(int)","url":"%3Cinit%3E(int)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"insertUsername(TriggerData)","url":"insertUsername(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"insertUsername(TriggerData)","url":"insertUsername(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"inStringoutXML(String)","url":"inStringoutXML(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"IntWithMod()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"inXMLoutString(SQLXML)","url":"inXMLoutString(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"PreJSR310","l":"issue199()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"issue228()"},{"p":"org.postgresql.pljava.example.annotation","c":"JDBC42_21","l":"javaSpecificationGE(String)","url":"javaSpecificationGE(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"JDBC42_21","l":"JDBC42_21()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"leakStatements(TriggerData)","url":"leakStatements(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"like_regex(String, String, String, boolean)","url":"like_regex(java.lang.String,java.lang.String,java.lang.String,boolean)"},{"p":"org.postgresql.pljava.example","c":"Users","l":"listNonSupers()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"listSupers()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"logAndReturn(ComplexScalar)","url":"logAndReturn(org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"logAndReturn(ComplexTuple)","url":"logAndReturn(org.postgresql.pljava.example.annotation.ComplexTuple)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"logAndReturn(Point)","url":"logAndReturn(org.postgresql.pljava.example.annotation.Point)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"logAny(Object)","url":"logAny(java.lang.Object)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"logAnyElement(Object)","url":"logAnyElement(java.lang.Object)"},{"p":"org.postgresql.pljava.example","c":"LoggerTest","l":"LoggerTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"LoggerTest","l":"logMessage(String, String)","url":"logMessage(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho_(SQLXML, int, ResultSet)","url":"lowLevelXMLEcho_(java.sql.SQLXML,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho(SQLXML, int, ResultSet)","url":"lowLevelXMLEcho(java.sql.SQLXML,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho(String)","url":"lowLevelXMLEcho(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"magnitudeLT(ComplexScalar, ComplexScalar)","url":"magnitudeLT(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"makeArray(Object)","url":"makeArray(java.lang.Object)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"makeString(ResultSet)","url":"makeString(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"maxFromSetReturnExample(int, int)","url":"maxFromSetReturnExample(int,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"MetaDataBooleans()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"MetaDataInts()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"MetaDataStrings()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"MetaDataTest(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"minMagnitude(ComplexScalar, ComplexScalar)","url":"minMagnitude(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"mockedXMLEcho(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"mockedXMLEcho(String)","url":"mockedXMLEcho(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modApply(IntWithMod, int, boolean)","url":"modApply(org.postgresql.pljava.example.annotation.IntWithMod,int,boolean)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"moddatetime(TriggerData)","url":"moddatetime(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modIn(String[])","url":"modIn(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modOut(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"moodsToTexts(String[])","url":"moodsToTexts(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"moodToText(String)","url":"moodToText(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B.C","l":"moreNestedAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.A","l":"nestedAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B","l":"nestedClassAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"nestedStatements(int)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"next()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"notOutParams(ResultSet)","url":"notOutParams(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"nullOnEven(int)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"occurrences_regex(String, String, String, int, boolean, boolean)","url":"occurrences_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"paramDefaultsNamedRow(ResultSet)","url":"paramDefaultsNamedRow(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"paramDefaultsRecord(ResultSet)","url":"paramDefaultsRecord(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"Parameters()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"parse(String, String)","url":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"parse(String, String)","url":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"parse(String, String)","url":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"parse(String, String)","url":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"passivate()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"PassXML()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PGF1010962","l":"PGF1010962()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"XMLRenderedTypes","l":"pgNodeTreeAsXML(SQLXML)","url":"pgNodeTreeAsXML(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"Point()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"position_regex(String, String, String, int, boolean, boolean, int, int, boolean)","url":"position_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,int,int,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"PreJSR310","l":"PreJSR310()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLSchema(String, SQLXML, String, int)","url":"prepareXMLSchema(java.lang.String,java.sql.SQLXML,java.lang.String,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLTransform(String, SQLXML, int, boolean, boolean, ResultSet)","url":"prepareXMLTransform(java.lang.String,java.sql.SQLXML,int,boolean,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLTransformWithJava(String, SQLXML, int, boolean, boolean, ResultSet)","url":"prepareXMLTransformWithJava(java.lang.String,java.sql.SQLXML,int,boolean,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(byte)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Date)","url":"print(java.sql.Date)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(float)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(float[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(int[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Integer[])","url":"print(java.lang.Integer[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(long)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(long[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(short)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(short[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Time)","url":"print(java.sql.Time)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Timestamp)","url":"print(java.sql.Timestamp)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"propertyExampleAnno()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"propertyExampleRB()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"proxiedXMLEcho(SQLXML, int)","url":"proxiedXMLEcho(java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"RandomInts(int)","url":"%3Cinit%3E(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"readSQL(SQLInput, String)","url":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"registerTransactionListener()"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"remove()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"remove()"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"removeXY(double[], double, double)","url":"removeXY(double[],double,double)"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"ResultSetTest(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"ReturnComposite()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"TypeRoundTripper","l":"roundTrip(ResultSet, String, boolean, ResultSet)","url":"roundTrip(java.sql.ResultSet,java.lang.String,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"run()"},{"p":"org.postgresql.pljava.example","c":"Security","l":"Security()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"SetOfRecordTest(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"setParameter()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setResult(Class<T>)","url":"setResult(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setResult(Class<T>)","url":"setResult(java.lang.Class)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"setReturn(int, int)","url":"setReturn(int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setString(String)","url":"setString(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setString(String)","url":"setString(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"SPIActions()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"SQLXMLMock(byte[])","url":"%3Cinit%3E(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"SQLXMLMock(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"SQLXMLProxy(SQLXML, int)","url":"%3Cinit%3E(java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"stashResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"strictlyNestedTest()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"substring_regex(String, String, String, int, boolean, int, int, boolean)","url":"substring_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,int,int,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"sum(double, double)","url":"sum(double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Variadic","l":"sumOfSquares(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Variadic","l":"sumOfSquaresBoxed(Double[])","url":"sumOfSquaresBoxed(java.lang.Double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"testSavepointSanity()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"testTransactionRecovery()"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"textsToMoods(String[])","url":"textsToMoods(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"textToMood(String)","url":"textToMood(java.lang.String)"},{"p":"org.postgresql.pljava.example","c":"Threads","l":"Threads()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"ThreadTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"transferPeopleWithSalary(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"transformXML(String, SQLXML, int, int, ResultSet, Boolean, Integer)","url":"transformXML(java.lang.String,java.sql.SQLXML,int,int,java.sql.ResultSet,java.lang.Boolean,java.lang.Integer)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"translate_regex(String, String, String, String, int, boolean, int, boolean)","url":"translate_regex(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,int,boolean)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"Triggers()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"Triggers()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"TupleReturn(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"tupleReturn(int, int, ResultSet)","url":"tupleReturn(int,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"tupleReturn(Integer, Integer, ResultSet)","url":"tupleReturn(java.lang.Integer,java.lang.Integer,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"UDTScalarIOTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"unclosedSQLXML(int, int)","url":"unclosedSQLXML(int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"UnicodeRoundTripTest","l":"UnicodeRoundTripTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"UnicodeRoundTripTest","l":"unicodetest(String, int[], ResultSet)","url":"unicodetest(java.lang.String,int[],java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"unstashResultSet()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"Users(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"UsingProperties()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"UsingProperties(ObjectPool<UsingProperties>)","url":"%3Cinit%3E(org.postgresql.pljava.ObjectPool)"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"UsingPropertiesAsResultSet()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsScalarSet","l":"UsingPropertiesAsScalarSet()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingPropertiesAsScalarSet","l":"UsingPropertiesAsScalarSet()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"VarlenaUDTTest()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"writeSQL(SQLOutput)","url":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmlcast(ResultSet, Boolean, ResultSet)","url":"xmlcast(java.sql.ResultSet,java.lang.Boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmlexists(String, ResultSet, String[])","url":"xmlexists(java.lang.String,java.sql.ResultSet,java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlFromComposite()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlInStmtAndRS(ResultSet)","url":"xmlInStmtAndRS(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"XMLRenderedTypes","l":"XMLRenderedTypes()","url":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmltable(String, String[], ResultSet, String[], Boolean)","url":"xmltable(java.lang.String,java.lang.String[],java.sql.ResultSet,java.lang.String[],java.lang.Boolean)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmltext(String)","url":"xmltext(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlTextNode(byte[], String, int, boolean)","url":"xmlTextNode(byte[],java.lang.String,int,boolean)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xq_ret_content(String, Boolean, ResultSet, String[])","url":"xq_ret_content(java.lang.String,java.lang.Boolean,java.sql.ResultSet,java.lang.String[])"}]